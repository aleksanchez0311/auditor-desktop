package cu.lacumbre.auditor.model;

import java.util.ArrayList;

public class Product extends Workable {

    private TPVCategory tpvCategory;
    private CostSheet costSheet;
    private double price;

    public Product(String description, MeasureUnit measureUnit, TPVCategory tpvCategory, CostSheet costSheet, double price, int code, boolean archivated) {
        super(description, measureUnit, code, archivated);
        this.price = price;
        this.costSheet = costSheet;
        this.tpvCategory = tpvCategory;
    }

    public Product(int id, String description, MeasureUnit measureUnit, TPVCategory tpvCategory, CostSheet costSheet, double price, int code, boolean archivated) {
        super(id, description, measureUnit, code, archivated);
        this.price = price;
        this.costSheet = costSheet;
        this.tpvCategory = tpvCategory;
    }

    public Product(int id, String description, MeasureUnit measureUnit, TPVCategory tpvCategory, Recipe recipe, CostSheet costSheet, double price, int code, boolean archivated) {
        super(id, description, measureUnit, recipe, code, archivated);
        this.price = price;
        this.costSheet = costSheet;
        this.tpvCategory = tpvCategory;
    }

    public double getPrice() {
        return price;
    }

    public int getProfit() {
        return (int) (price - costSheet.getProductionCost());
    }

    public int getLowerProfit() {
        return (int) (price - costSheet.getHigestProductionCost());
    }

    public double getProductionCost() {
        return costSheet.getProductionCost();
    }

    public double getCalculatedPrice() {
        return costSheet.getCalculatedPrice();
    }

    public TPVCategory getTpvCategory() {
        return tpvCategory;
    }

    public CostSheet getCostSheet() {
        return costSheet;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public void setCostSheet(CostSheet costSheet) {
        this.costSheet = costSheet;
    }

    public void setTpvCategory(TPVCategory tpvCategory) {
        this.tpvCategory = tpvCategory;
    }

    public static Product generate() {
        return new Product("Autogenerated", MeasureUnit.generate(), TPVCategory.generate(), CostSheet.generate(), 0, 0, false);
    }

    

//    @Override
//    public boolean isProduct() {
//        return true;
//    }
//
//    @Override
//    public boolean isWProduct() {
//        return id >= ItemsCRUD.START_FOR_WPRODUCTS && id < ItemsCRUD.START_FOR_RFSPRODUCTS;
//    }
//
//    @Override
//    public boolean isBProduct() {
//        return id >= ItemsCRUD.START_FOR_RFSPRODUCTS;
//    }
    public int promediarVenta(ArrayList<Operation> list) {
        int soldUnits = 0;
        for (Operation operation : list) {
            soldUnits += operation.getAmmount();
        }
        return Math.round(soldUnits / list.size());
    }
}
