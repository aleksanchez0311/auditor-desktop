package cu.lacumbre.auditor.model;

public class Item extends IDSuperClass {

    protected String description;
    protected MeasureUnit measureUnit;
    protected int code;
    protected boolean archivated;

    protected static final String BASIC_COST = "basic_cost";
    protected static final String WEIGHTED_COST = "weighted_cost";
    protected static final String LAST_COST = "last_cost";
    protected static final String HIGHEST_COST = "highest_cost";
    protected static final String COST_TO_USE = HIGHEST_COST;

    public Item(int id, String description, MeasureUnit measureUnit, int code, boolean archivated) {
        super(id);
        this.description = description;
        this.measureUnit = measureUnit;
        this.code = code;
        this.archivated = archivated;
    }

    protected Item(String description, MeasureUnit measureUnit, int code, boolean archivated) {
        super();
        this.description = description;
        this.measureUnit = measureUnit;
        this.code = code;
        this.archivated = archivated;
    }

    public static Item generate() {
        return new Item("Autogenerated", MeasureUnit.generate(), 0, false);
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public MeasureUnit getMeasureUnit() {
        return measureUnit;
    }

    public void setMeasureUnit(MeasureUnit measureUnit) {
        this.measureUnit = measureUnit;
    }

    public void copyItemsFields(Item item) {
        this.description = item.getDescription();
        this.measureUnit = item.getMeasureUnit();
    }

    public boolean isArchivated() {
        return archivated;
    }

    public void setArchivated(boolean archivated) {
        this.archivated = archivated;
    }

    public int getCode() {
        return code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    @Override
    public Object get(String field) {
        return switch (field) {
            case "description" ->
                description + "(" + getClass() + ")";
            case "code" ->
                getCode();
            default ->
                super.get(field);
        };
    }

    @Override
    public String toString() {
        return description;
    }

}
